labkey.executeSql          package:Rlabkey          R Documentation

_R_e_t_r_i_e_v_e _d_a_t_a _f_r_o_m _a _l_a_b_k_e_y _d_a_t_a_b_a_s_e _u_s_i_n_g _S_Q_L _c_o_m_m_a_n_d_s

_D_e_s_c_r_i_p_t_i_o_n:

     Use Sql commands to specify data to be imported into R. Prior to
     import, data can be manipulated through standard SQL commands
     supported in labkey SQL.

_U_s_a_g_e:

     labkey.executeSql(baseUrl, folderPath, schemaName, sql, maxRows = NULL, 
     rowOffset = NULL, stripAllHidden = TRUE)

_A_r_g_u_m_e_n_t_s:

 baseUrl: a string specifying the 'baseUrl'for the labkey server

folderPath: a string specifying the 'folderPath' 

schemaName: a string specifying the  'schemaName' for the query

     sql: a string containing the 'sql' commands to be executed

 maxRows: (optional) an integer specifying the maximum number of rows
          to return. If no value is specified, all rows are returned.

rowOffset: (optional) an integer specifying which row of data should be
          the first row in the retrieval.  If no value is specified,
          rows will begin at the start of the result set.

stripAllHidden: (optional) a logical value indicating whether or not to
          return data columns that would  normally be hidden from user
          veiw. If no value is specified, no hidden columns are
          returned.

_D_e_t_a_i_l_s:

     Rows returned from the SQL query are imported into an R data frame
     using the 'labkey.executeSql' function. Function arguments are
     components of the url that identify the location of the data and
     what SQL actions should be taken on the data prior to import.

     NOTE: Each variable in a dataset has both a column label and a
     column name. The column label is visable at the top of each column
     on the web page and is longer and more descriptive. The column
     name is shorter and is used "behind the scenes" for database
     manipulation. It is the column name that must be used in the
     Rlabkey functions when a column name is expected. To identify a
     particular column name in a dataset on a web site, use the "export
     to R script" option available as a drop down option under the
     "views" tab for each dataset.

_V_a_l_u_e:

     The requested data are returned in a data frame with column names
     as they appear on the website.

_A_u_t_h_o_r(_s):

     Valerie Obenchain

_R_e_f_e_r_e_n_c_e_s:

     http://www.omegahat.org/RCurl/,
       http://dssm.unipa.it/CRAN/web/packages/rjson/rjson.pdf,
      https://www.labkey.org/project/home/begin.view

_S_e_e _A_l_s_o:

     'labkey.selectRows', 'makeFilter', 'labkey.insertRows', 
     'labkey.updateRows', 'labkey.deleteRows'

_E_x_a_m_p_l_e_s:

     ### Select participants who meet acute status requirements
     #getacute <- labkey.executeSql(baseUrl="https://www.labkey.org",
     #                            folderPath="/home/Study/demo",
     #                            schemaName="study",
     #                            sql = 'select "Status Assessment".ParticipantId from "Status Assessment" where "Status Asses#sment"."StatusMeetCriteria"=\'yes\'')
     #
     #
     ### Average ages over different gender groups
     #getage <- labkey.executeSql(baseUrl="https://www.labkey.org",
     #                            folderPath="/home/Study/demo",
     #                            schemaName="study",
     #                            sql = "select Demographics.Gender, avg(Demographics.Age) as Number from Demographics group b#y Demographics.Gender")
     #

     ### Select data for participants with partner information 
     #getpartners <- labkey.executeSql(baseUrl="https://www.labkey.org",
     #                            folderPath="/home/Study/demo",
     #                            schemaName="study",
     #                            sql = 'select "Status Assessment".StatusPartner1 from "Status Assessment" where "Status Asse#ssment".StatusPartner1 is not null')
     #

