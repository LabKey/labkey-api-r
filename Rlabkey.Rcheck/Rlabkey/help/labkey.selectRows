labkey.selectRows          package:Rlabkey          R Documentation

_R_e_t_r_i_e_v_e _d_a_t_a _f_r_o_m _a _l_a_b_k_e_y _d_a_t_a_b_a_s_e _u_s_i_n_g _u_r_l _s_p_e_c_i_f_i_c_a_t_i_o_n_s

_D_e_s_c_r_i_p_t_i_o_n:

     Use simple filters and sorts to specify data to be imported into
     R. Prior to import,  the data columns can be sorted, specific
     columns or number of rows can be requested and data filters can be
     applied.

_U_s_a_g_e:

     labkey.selectRows(baseUrl, folderPath, schemaName, queryName, viewName = NULL, 
     colSelect = NULL, maxRows = NULL, rowOffset = NULL, colSort = NULL, 
     colFilter = NULL, stripAllHidden = TRUE)

_A_r_g_u_m_e_n_t_s:

 baseUrl: a string specifying the 'baseUrl'for the labkey server

folderPath: a string specifying the 'folderPath' 

schemaName: a string specifying the  'schemaName' for the query

queryName: a string specifying the 'queryName'

viewName: (optional) a string specifying the 'viewName'

colSelect: (optional) a vector of comma separated strings specifying
          which columns of a dataset or view to import

 maxRows: (optional) an integer specifying how many rows of data to
          return. If no value is specified, all rows are returned.

 colSort: (optional) a string including the name of the column to sort
          preceeded by a "+" or "-" to indicate sort direction

rowOffset: (optional) an integer specifying which row of data should be
          the first row in the retrieval. If no value is specified, the
          retrieval starts with the first row.

colFilter: (optional) a vector or array object created by the
          'makeFilter' function which contains the column name,
          operator and value of the filter(s) to be applied to the
          retrieved data.

stripAllHidden: (optional) a logical value indicating whether or not to
          save data columns that would normally be hiddenfrom user
          view. If no value is specified, no hidden columns are
          returned.

_D_e_t_a_i_l_s:

     A full dataset or user saved view can be imported into an R data
     frame using the 'labkey.selectRows'  function. The function
     accepts as its arguments the components of the url that identify
     the location of the data and what actions should be taken on the
     data prior to import (ie, sorting, selecting particular columns or
     maximum number of rows, etc.). Data are returned in a data  frame
     with column names as they appear on the labkey database website. 

     Use care when specifying column names for the colSelect or
     colFilter arguments. Often the column name that appears on the web
     site is not the same as the column caption. The column name is
     what is needed in colselect and colFilter arguments. 

     When importing data from ATLAS.scharp.org, a quick and simple way
     to identify the necessary components of the url  (i.e.,
     schemaName, queryName, viewName, the correct column names etc.) is
     to use the "export to R script" option avaiable as a drop down
     options under the "views" tab for each dataset.

_V_a_l_u_e:

     The requested data are returned in a data frame.

_A_u_t_h_o_r(_s):

     Valerie Obenchain

_R_e_f_e_r_e_n_c_e_s:

     http://www.omegahat.org/RCurl/,
       http://dssm.unipa.it/CRAN/web/packages/rjson/rjson.pdf,
      https://www.labkey.org/project/home/begin.view

_S_e_e _A_l_s_o:

     'labkey.executeSql', 'makeFilter', 'labkey.insertRows', 
     'labkey.updateRows', 'labkey.deleteRows'

_E_x_a_m_p_l_e_s:

     ## Retrieving data from the Labkey.org web site:

     library(Rlabkey)

     # Retrieve HIV Test Results and plot Western Blot data
     getdata <- labkey.selectRows(baseUrl="https://www.labkey.org", folderPath="/home/Study/demo", 
                                     schemaName="study", queryName="HIV Test Results")
     plot(factor(getdata$"HIV Western Blot"), main="HIV Western Blot")

     # Select columns and apply filters
     myfilters<- makeFilter(c("HIVLoadQuant","GREATER_THAN",500), c("HIVRapidTest","EQUALS","Positive"))

     getdata <- labkey.selectRows(baseUrl="https://www.labkey.org", folderPath="/home/Study/demo", 
     schemaName="study", queryName="HIV Test Results", 
     colSelect=c("ParticipantId","HIVDate","HIVLoadQuant","HIVRapidTest"), colFilter=myfilters)

