import org.labkey.gradle.task.CopyAndInstallRPackage
import org.labkey.gradle.task.InstallRPackage
import org.labkey.gradle.util.GroupNames

String rLibsUserPath = InstallRPackage.getRLibsUserPath(project)

if (rLibsUserPath != null) {
    project.tasks.register("cleanRLibsUser", Delete) {
        Delete task ->
            task.group = GroupNames.DEPLOY
            task.description = "Delete user directory containing R libraries (${rLibsUserPath})"
            task.configure({
                DeleteSpec delete ->
                    if (new File(rLibsUserPath).exists())
                        delete.delete rLibsUserPath
            })
    }
}

project.tasks.register("installRLabKey", CopyAndInstallRPackage) {
    CopyAndInstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install RLabKey and its dependencies"
        task.packageLocation = parent.buildDir
        task.packageNames = ["Rlabkey"]
        task.installScript = "install-rlabkey-dependencies.R"
        task.dependsOn(rootProject.tasks.getByName("build"))
        task.doFirst {
            project.copy {
                CopySpec copy ->
                    copy.from(projectDir)
                    copy.into(rLibsUserPath)
                    copy.include("listArchive.zip")
            }
        }
}

project.tasks.register("installLuminexDependencies",InstallRPackage) {
    InstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install Luminex Dependencies packages"
        task.packageNames = ["luminex"]
        task.installScript = "install-luminex-dependencies.R"
}

project.tasks.register("installKnitr",InstallRPackage) {
    InstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install knitr and its dependencies"
        task.packageNames = ["knitr", "rmarkdown"]
        task.installScript = "install-knitr.R"
}

project.tasks.register("installEhrDependencies",InstallRPackage) {
    InstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install EHR Dependencies packages"
        task.packageNames = ["kinship2", "pedigree"]
        task.installScript = "install-ehr-dependencies.R"
}


project.tasks.register("installMedimmuneDependencies", InstallRPackage) {
    InstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install MedImmune dependencies"
        task.packageNames = ["doBy", "gdata", "jsonlite", "openxlsx", "tidyr", "xml2"]
        task.installScript = "install-medimmune-dependencies.R"
}


project.tasks.register("installRSurvival", InstallRPackage) {
    InstallRPackage task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install RSurvival and its dependencies"
        task.packageNames = ["survival"]
        task.installScript = "install-survival.R"
}

project.tasks.register("install") {
    Task task ->
        task.group = GroupNames.DEPLOY
        task.description = "Install R packages"
        task.dependsOn(
                project.tasks.installRLabKey,
                project.tasks.installLuminexDependencies,
                project.tasks.installKnitr,
                project.tasks.installEhrDependencies,
                project.tasks.installRSurvival
        )
}
